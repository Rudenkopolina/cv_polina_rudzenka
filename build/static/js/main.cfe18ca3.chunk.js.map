{"version":3,"sources":["components/Header.js","common/theme.js","components/Section.js","components/DotedContent.js","components/InfoContent.js","data.js","components/Sheet.js","App.js","serviceWorker.js","index.js","common/images/avatar.jpeg"],"names":["Header","Container","ImageWrapper","ImageBlock","Image","src","Avatar","Separator","NameBlock","styled","div","img","Section","data","children","isRightSide","title","Icon","RenderSection","RightSectionHeader","LeftSectionHeader","IconWrapper","SectionHeader","DotedContent","map","content","ContentWrapper","Title","date","Description","description","Date","InfoContent","about","FaIdCard","education","FaGraduationCap","work","FaBriefcase","Sheet","LeftColumn","RightColumn","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.cfe18ca3.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { sectionHeader, sectionBackground } from '../common/theme';\nimport Avatar from '../common/images/avatar.jpeg'\n\nfunction Header() {\n    return (\n        <Container>\n            <ImageWrapper>\n                <ImageBlock>\n                    <Image src={Avatar} />\n                </ImageBlock>\n                <Separator />\n            </ImageWrapper>\n            <NameBlock>\n                Polina Rudzenka\n            </NameBlock>\n        </Container>\n    );\n}\n\nexport default Header;\n\nconst Container = styled.div`\n    background: ${sectionBackground};\n    display: flex;\n`;\n\nconst ImageWrapper = styled.div`\n    background: ${sectionHeader};\n    padding: .5rem 3rem .5rem 1rem;\n    border-radius: 0 5px 5px 0;\n    position: relative;\n`;\n\nconst ImageBlock = styled.div`\n    width: 6rem;\n    height: 6rem;\n    border-radius: 50%;\n    overflow: hidden;\n    border: 2px solid #fff;\n`;\n\nconst Image = styled.img`\n    width: 6rem;\n`;\n\nconst Separator = styled.div`\n    position: absolute;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    border-top: 56px solid transparent;\n    border-bottom: 56px solid transparent;\n    border-right: 30px solid ${sectionBackground};\n    `;\n    \n    const NameBlock = styled.div`\n    font-size: 2rem;\n    margin-left: 2rem;\n    display: flex;\n    align-items: center;\n`;\n","export const background = '#f8f8f9';\nexport const sheetBackground = '#fff';\nexport const sectionBackground = '#f4f4f5';\nexport const sectionHeader = '#36484f';\n","import React from 'react';\nimport styled from 'styled-components';\nimport { sectionHeader, sectionBackground } from '../common/theme';\n\nfunction Section({ data, children, isRightSide }) {\n    const { title, Icon } = data;\n    const RenderSection = isRightSide ? RightSectionHeader : LeftSectionHeader;\n    return (\n        <Container>\n            <RenderSection>\n                {title}\n                <IconWrapper>\n                    <Icon />\n                </IconWrapper>\n            </RenderSection>\n            {children}\n        </Container>\n    );\n}\n\nexport default Section;\n\nconst Container = styled.div`\n    background: ${sectionBackground};\n`;\n\nconst IconWrapper = styled.div`\n    & svg {\n        width: 1.5rem;\n    }\n`;\n\nconst SectionHeader = styled.div`\n    background: ${sectionHeader};\n    color: #fff;\n    font-size: 1.2rem;\n    text-transform: uppercase;\n    padding: .5rem;\n    padding-left: 1.5rem;\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n`;\n    \nconst LeftSectionHeader = styled(SectionHeader)`    \n    margin-left: -1rem;\n    :before {\n        content: '';\n        position: absolute;\n        top: 100%;\n        left: 0;\n        border: 1rem solid transparent;\n        border-top-color: #242f33;\n        border-right: 0;\n        border-left-width: 1rem;\n    }\n`;\n\nconst RightSectionHeader = styled(SectionHeader)`    \n    margin-right: -1rem;\n    :before {\n        content: '';\n        position: absolute;\n        top: 100%;\n        right: 0;\n        border: 1rem solid transparent;\n        border-top-color: #242f33;\n        border-left: 0;\n        border-right-width: 1rem;\n    }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nfunction DotedContent({ data }) {\n    return (\n        <Container>\n            {data.map(content => (\n                <ContentWrapper>\n                    <Header>\n                        <Title>{content.title}</Title>\n                        <Date>{content.date}</Date>\n                    </Header>\n                    <Description>{content.description}</Description>\n                </ContentWrapper>\n            ))}\n        </Container>\n    );\n}\n\nexport default DotedContent;\n\nconst Container = styled.div`\n    padding: 1rem;\n    font-size: .8rem;\n`;\n\nconst ContentWrapper = styled.div`\n    position: relative;\n    margin-left: 1rem;\n    padding-bottom: 1rem;\n\n    :before {\n        content: '';\n        position: absolute;\n        top: 2px;\n        width: 10px;\n        height: 10px;\n        border-radius: 50%;\n        background: red;\n        left: -1.25rem;\n    }\n\n    :after {\n        content: '';\n        position: absolute;\n        top: 12px;\n        width: 2px;\n        height: 100%;\n        background: #b5b5b5;\n        left: -1rem;\n    }\n    :last-child:after {\n        content: none;\n    }\n`;\n\nconst Header = styled.div`\n    display: flex;\n    justify-content: space-between;\n    font-weight: bold;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n`;\n\nconst Title = styled.div``;\n\nconst Date = styled.div``;\n\nconst Description = styled.div`\n    color: #5f5f5f;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\n\nfunction InfoContent({ content }) {\n    return (\n        <Container>\n            <ContentWrapper>\n                {content}\n            </ContentWrapper>\n        </Container>\n    );\n}\n\nexport default InfoContent;\n\nconst Container = styled.div`\n    padding: 1rem;\n    font-size: .8rem;\n`;\n\nconst ContentWrapper = styled.div`\n    position: relative;\n    margin-left: 1rem;\n    padding-bottom: 1rem;\n`;\n","import {\n    FaGraduationCap,\n    FaBriefcase,\n    FaIdCard,\n} from \"react-icons/fa\";\n\nexport default {\n    about: {\n        title: 'about',\n        Icon: FaIdCard,\n        content: `dk;fuhh iruhwiruhf sdjkhskdjf skdjhfskd ksjhdf ksdhfs ksdkjhf s;df\n                skjdhfsjdkhfsd sdjkdskjsdjk djdjkdjsdkj sdkjdsjkdskj`,\n    },\n    education: {\n        title: 'education',\n        Icon: FaGraduationCap,\n        content: [\n            {\n                title: 'Belarusian State University',\n                description: 'B.Sc. Mechanics and Mathematics. Mathematics (Science-Design Activity)',\n                date: '2015 - 2019',\n            }\n        ]\n    },\n    work: {\n        title: 'work experience',\n        Icon: FaBriefcase,\n        content: [\n            {\n                title: 'IBA',\n                description: 'Full Stack Engineer',\n                date: '211/2018 - PRESENT',\n            },\n            {\n                title: 'Paralect',\n                description: 'Full Stack Engineer',\n                date: '07/2018 - 11/2018',\n            }\n        ]\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\nimport { sheetBackground } from '../common/theme';\nimport Header from './Header';\nimport Section from './Section';\nimport DotedContent from './DotedContent';\nimport InfoContent from './InfoContent';\n\nimport data from '../data';\n\nfunction Sheet() {\n    const { education, work, about } = data;\n    return (\n        <Container>\n            <Header />\n            <ContentWrapper>\n                <LeftColumn>\n                    <Section data={about}>\n                        <InfoContent content={about.content} />\n                    </Section>\n                    <Section data={education}>\n                        <DotedContent data={education.content} />\n                    </Section>\n                    <Section data={work}>\n                        <DotedContent data={work.content} />\n                    </Section>\n                </LeftColumn>\n                <RightColumn>\n                    <Section data={about} isRightSide>\n                        <InfoContent content={about.content} />\n                    </Section>\n                </RightColumn>\n\n            </ContentWrapper>\n        </Container>\n    );\n}\n\nexport default Sheet;\n\nconst Container = styled.div`\n    background: ${sheetBackground};\n    width: 21cm;\n    height: 29.7cm;\n    padding: 2.5rem;\n    margin: 16px auto;\n    box-shadow: 0 0 0.5cm rgb(0 0 0 / 15%);\n`;\n\nconst ContentWrapper = styled.div`\n    display: flex;\n    margin: 1.5rem 1rem;\n`;\n\nconst LeftColumn = styled.div`\n    flex: 7;\n    margin-right: 1rem;\n`;\n\nconst RightColumn = styled.div`\n    flex: 3;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { background } from './common/theme';\nimport Sheet from './components/Sheet';\n\nfunction App() {\n  return (\n    <Container>\n      <Sheet />\n    </Container>\n  );\n}\n\nexport default App;\n\nconst Container = styled.div`\n    display: flex;\n    background: ${background};\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/avatar.29be6f31.jpeg\";"],"sourceRoot":""}